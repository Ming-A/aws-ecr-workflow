name: Build and Push apps to ECR (trial with test-python-app_1)

# on:
#   push:
#     branches:
#       - main # Only triggers on pushes to the main branch
#     paths:
#       - 'apps/test-python-app_1/**'

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY_NAME: test-python-app_1
  MICROSERVICE_PATH: apps/test-python-app_1
  PYTHON_VERSION: '3.9' 

jobs:
  build-test-and-push:
    name: Build, Test, and Push test-python-app_1 Image
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python dependencies for test-python-app_1
      working-directory: ./${{ env.MICROSERVICE_PATH }} # Run this step inside the test-python-app_1 directory
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 

    - name: Run unit tests for test-python-app_1
      working-directory: ./${{ env.MICROSERVICE_PATH }} # Run this step inside the test-python-app_1 directory
      run: |
        pytest 

    - name: Configure AWS Credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ECR_ACCESS_ROLE }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        echo "Building image from path: ./${{ env.MICROSERVICE_PATH }}"
        echo "Tagging as: $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG"

        docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG \
                     -f ./${{ env.MICROSERVICE_PATH }}/Dockerfile \
                     ./${{ env.MICROSERVICE_PATH }}
        
        echo "Pushing image: $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG"
        docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_NAME }}:$IMAGE_TAG

    - name: Output pushed image details
      run: |
        echo "Image pushed: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_NAME }}:latest"